{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "moduleResolution": "bundler",
    "target": "es2017",
    "module": "esnext",
    "jsx": "preserve",
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "plugins": [
      {
        /**
         * Next.js has built-in support for TypeScript, using plugin below.
         * But while you use `pnpm build`, it stops on the first type errors.
         * So you can use `pnpm bv` to check all type warns and errors at once.
         */
        "name": "next"
      }
    ],
    "noEmit": true,
    "allowJs": true,
    "checkJs": true,
    "sourceMap": true,
    "incremental": true,
    "skipLibCheck": true,
    "removeComments": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    "downlevelIteration": true,
    "noUncheckedIndexedAccess": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    /**
     * These options below can be dangerously set to false,
     * while you're incrementally move to full type-safety.
     */
    "strictPropertyInitialization": true,
    "strictNullChecks": true,
    "noImplicitAny": false,
    "alwaysStrict": true,
    "strict": true
  },
  "include": [
    ".eslintrc.cjs",
    "next-env.d.ts",
    "**/*.cjs",
    "**/*.cjs",
    "**/*.d.ts",
    "**/*.mjs",
    "**/*.mjs",
    "**/*.test.ts",
    "**/*.ts",
    "**/*.tsx",
    ".next/types/**/*.ts",
    "src/app1/[locale]/error.tsx_"
  ],
  "exclude": ["node_modules"]
}
